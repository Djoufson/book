version: '3.3'

services:
  catalog-api:
    container_name: catalog-api
    build:
      context: .
      dockerfile: src/Services/Catalog.API/Dockerfile
    depends_on:
      - db
    ports:
      - 5001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Postgresql=User Id=postgres;Password=postgres;Server=db;Port=5432;Database=CatalogDb;IntegratedSecurity=true;Pooling=true;
  identity-api:
    container_name: identity-api
    build:
      context: .
      dockerfile: src/Services/Identity.API/Dockerfile
    depends_on:
      - db
    ports:
      - 5002:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Postgresql=User Id=postgres;Password=postgres;Server=db;Port=5432;Database=IdentityDb;IntegratedSecurity=true;Pooling=true;

  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5433:5433
    restart: always
    volumes:
      - postgresdata:/var/lib/postgresql/data

volumes:
  postgresdata:
